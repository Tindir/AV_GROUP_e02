#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//смотрим в ЗУП, БП и КА - там это легитимно :)
	ОчиститьДвиженияДокумента();
	
	ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ);
	ПодготовитьТаблицыДляДвижений(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ);
	СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Отказ);
	
	КотрольОстатковТовара(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОчиститьДвиженияДокумента()

	Для Каждого Движение Из Движения Цикл
		
		Движение.Записывать = Истина;
		Движение.Прочитать();
		Движение.Очистить();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ) Экспорт 
	
	ДополнительныеСвойства.Вставить("СписыватьТоварыИзСмежныхСкладов", Ссылка.СписыватьТоварыИзСмежныхСкладов);
	
КонецПроцедуры

Процедура ПодготовитьТаблицыДляДвижений(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ) Экспорт
	
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", новый Структура());
	
	ПодготовитьТаблицыДляДвижений_ТоварыНаСкладах(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ);

КонецПроцедуры

Процедура ПодготовитьТаблицыДляДвижений_ТоварыНаСкладах(Ссылка, ДополнительныеСвойства, РежимПроведения, Отказ) Экспорт
	
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТоварыНаСкладах", Новый ТаблицаЗначений);
	
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;  
	Запрос.УстановитьПараметр("СписыватьТоварыИзСмежныхСкладов", ДополнительныеСвойства.СписыватьТоварыИзСмежныхСкладов);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата); 
	Запрос.УстановитьПараметр("Граница", Новый Граница(МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Склад", Склад);

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧ.Ссылка КАК Ссылка,
		|	ТЧ.НомерСтроки КАК НомерСтроки,
		|	ТЧ.Номенклатура КАК Номенклатура,
		|	ТЧ.Количество КАК Количество
		|ПОМЕСТИТЬ ТЧ
		|ИЗ
		|	Документ.РасходнаяНакладная.Товары КАК ТЧ
		|ГДЕ
		|	ТЧ.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Склад КАК Склад,
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ТЧ.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА ТЧ.Количество - ТоварыНаСкладахОстатки.КоличествоОстаток > 0
		|			ТОГДА ТЧ.Количество - ТоварыНаСкладахОстатки.КоличествоОстаток
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КРаспределению,
		|	ВЫБОР
		|		КОГДА ТЧ.Количество - ТоварыНаСкладахОстатки.КоличествоОстаток > 0
		|			ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
		|		ИНАЧЕ ТЧ.Количество
		|	КОНЕЦ КАК КоличествоКСписанию
		|ПОМЕСТИТЬ АнализДвижения
		|ИЗ
		|	ТЧ КАК ТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Граница, Склад = &Склад) КАК ТоварыНаСкладахОстатки
		|		ПО (ТоварыНаСкладахОстатки.Номенклатура = ТЧ.Номенклатура)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&ДокументСсылка КАК Регистратор,
		|	&ВидДвиженияРасход КАК ВидДвижения,
		|	&Период КАК Период,
		|	ТЧ.Номенклатура КАК Номенклатура,
		|	ТЧ.Склад КАК Склад,
		|	ВЫБОР
		|		КОГДА &СписыватьТоварыИзСмежныхСкладов
		|			ТОГДА ТЧ.КоличествоКСписанию
		|		ИНАЧЕ ТЧ.Количество
		|	КОНЕЦ КАК Количество
		|ИЗ
		|	АнализДвижения КАК ТЧ
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &СписыватьТоварыИзСмежныхСкладов
		|				ТОГДА ТЧ.КоличествоКСписанию > 0
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	//
	Результат = Запрос.Выполнить();
	НаборДвижения = Результат.Выгрузить();
	
	Если ДополнительныеСвойства.СписыватьТоварыИзСмежныхСкладов Тогда 
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	АнализДвижения.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.Склад КАК Склад,
		|	АнализДвижения.КРаспределению КАК КРаспределению,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	АнализДвижения КАК АнализДвижения
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Граница, НЕ Склад = &Склад) КАК ТоварыНаСкладахОстатки
		|		ПО АнализДвижения.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		|ГДЕ
		|	АнализДвижения.КРаспределению > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	КоличествоОстаток
		|ИТОГИ
		|	МАКСИМУМ(КРаспределению),
		|	СУММА(КоличествоОстаток)
		|ПО
		|	Номенклатура,
		|	Склад";
		//
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаНоменклатура = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Для каждого СтрНоменклатура ИЗ ВыборкаНоменклатура.Строки Цикл 
			СтрНоменклатура.Строки.Сортировать("КоличествоОстаток Убыв",);
			Для Каждого СтрСклад Из СтрНоменклатура.Строки Цикл
				
				Количество = Мин(СтрСклад.КоличествоОстаток, СтрНоменклатура.КРаспределению);	
				СтрНоменклатура.КРаспределению = СтрНоменклатура.КРаспределению - Количество;
				
				СтрДвижения = НаборДвижения.Добавить();
				СтрДвижения.Регистратор = Ссылка;
				СтрДвижения.ВидДвижения = ВидДвиженияНакопления.Расход;
				СтрДвижения.Период = Дата;
				СтрДвижения.Номенклатура = СтрСклад.Номенклатура;
				СтрДвижения.Склад = СтрСклад.Склад;
				СтрДвижения.Количество = Количество;
				
				Если СтрНоменклатура.КРаспределению = 0 Тогда
					Прервать;	
				КонецЕсли;
				
			КонецЦикла; 
			
			Если СтрНоменклатура.КРаспределению > 0 Тогда 
				
				СтрДвижения = НаборДвижения.Добавить();
				СтрДвижения.Регистратор = Ссылка;
				СтрДвижения.ВидДвижения = ВидДвиженияНакопления.Расход;
				СтрДвижения.Период = Дата;
				СтрДвижения.Номенклатура = СтрНоменклатура.Номенклатура;
				СтрДвижения.Количество = СтрНоменклатура.КРаспределению;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТоварыНаСкладах", НаборДвижения);

КонецПроцедуры

Процедура СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ТоварыНаСкладах;
	Если ТаблицаДвижений.Количество() > 0 Тогда
		Движения.ТоварыНаСкладах.Записывать = Истина;
		Движения.ТоварыНаСкладах.Загрузить(ТаблицаДвижений);
	КонецЕсли;
	
КонецПроцедуры

#Область Проверки

Процедура КотрольОстатковТовара(Отказ) Экспорт
	
	Движения.Записать();
	
	Запрос = новый Запрос;
	Запрос.Текст =
        "ВЫБРАТЬ
        |	ТоварыНаСкладах.Склад КАК Склад,
        |	ТоварыНаСкладах.Номенклатура КАК Номенклатура
        |ПОМЕСТИТЬ ДанныеДвижения
        |ИЗ
        |	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
        |ГДЕ
        |	ТоварыНаСкладах.Регистратор = &ДокументСсылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	Остатки.Склад КАК Склад,
        |	Остатки.Номенклатура КАК Номенклатура,
        |	-Остатки.КоличествоОстаток КАК Остаток
        |ИЗ
        |	РегистрНакопления.ТоварыНаСкладах.Остатки(
        |			&МоментВремени,
        |			Номенклатура В
        |					(ВЫБРАТЬ
        |						Товары.Номенклатура КАК Номенклатура
        |					ИЗ
        |						ДанныеДвижения КАК Товары
        |					СГРУППИРОВАТЬ ПО
        |						Товары.Номенклатура)
        |				И Склад В
        |					(ВЫБРАТЬ
        |						товары.Склад
        |					ИЗ
        |						ДанныеДвижения КАК товары
        |					СГРУППИРОВАТЬ ПО
        |						товары.Склад)) КАК Остатки
        |ГДЕ
        |	Остатки.КоличествоОстаток < 0";
   
    ГраницаКонтроля = Новый Граница(МоментВремени(), ВидГраницы.Включая);
    Запрос.УстановитьПараметр("МоментВремени", ГраницаКонтроля);   
	Запрос.УстановитьПараметр("Документссылка", Ссылка);
    РезультатЗапроса = Запрос.Выполнить();
   
    Если Не РезультатЗапроса.Пустой() Тогда
        Отказ = Истина;
        ВыборкаОшибки = РезультатЗапроса.Выбрать();
        Пока ВыборкаОшибки.Следующий() Цикл
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = "Товара " + ВыборкаОшибки.Номенклатура + " недостаточно в количестве " + ВыборкаОшибки.Остаток;
            Сообщение.Сообщить();
        КонецЦикла;
    КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
